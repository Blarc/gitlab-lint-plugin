<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.github.blarc.gitlab-template-lint-plugin</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Gitlab Template Lint</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="" url="https://github.com/Blarc">Blarc</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
        <p>
        Gitlab Template Lint Plugin is a plugin for IntelliJ based IDEs/Android studio for linting
        Gitlab CI/CD yaml configuration files. It uses the Gitlab lint API to check the currently
        open yaml configuration and shows the errors in the notification bar.
        </p>
        <br/>

        <p>
        To get started, install the plugin and set Gitlab private token with <strong>read_api</strong> and <strong>api</strong> scope in plugin's settings:
        <br/>
        Settings > Tools > Gitlab Template Lint
        <br/>
        </p>

        <p>
            <img src="https://raw.githubusercontent.com/Blarc/gitlab-lint-plugin/136bdfea2a5fe57ec5cd8e385b3cb6bc9361af5e/screenshots/plugin.gif"
                 border="0" width="600" alt="Highlight current scope.gif"/></p>
    ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.plugins.yaml</depends>
    <depends>Git4Idea</depends>

    <applicationListeners>
        <listener
                class="com.github.blarc.gitlab.template.lint.plugin.listeners.FileListener"
                topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"
        />
    </applicationListeners>

    <projectListeners>
        <listener class="com.github.blarc.gitlab.template.lint.plugin.listeners.VcsMappingChangedListener"
                  topic="com.intellij.dvcs.repo.VcsRepositoryMappingListener"/>

        <listener class="com.github.blarc.gitlab.template.lint.plugin.listeners.SaveActionListener"
                  topic="com.intellij.openapi.fileEditor.FileDocumentManagerListener"/>
    </projectListeners>

    <resource-bundle>messages.MyBundle</resource-bundle>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">


        <applicationService
                serviceImplementation="com.github.blarc.gitlab.template.lint.plugin.settings.AppSettings"/>

        <projectService
                serviceImplementation="com.github.blarc.gitlab.template.lint.plugin.settings.ProjectSettings"/>

        <projectService
                serviceImplementation="com.github.blarc.gitlab.template.lint.plugin.gitlab.Gitlab"/>

        <!--        <projectConfigurable-->
        <!--                parentId="tools"-->
        <!--                instance="com.github.blarc.gitlab.template.lint.plugin.ui.settings.ProjectSettingsConfigurable"-->
        <!--                id="GitlabLint.ProjectSettings"-->
        <!--        />-->


        <projectConfigurable
                parentId="tools"
                instance="com.github.blarc.gitlab.template.lint.plugin.ui.settings.SettingsConfigurable"
                id="com.github.blarc.gitlab.template.lint.plugin.ui.settings.SettingsConfigurable"
                key="settings.general.group.title"/>

        <localInspection
                language="yaml"
                groupPath="GitlabLint"
                groupBundle="messages.InspectionsBundle"
                groupKey="group.names.probable.bugs"
                enabledByDefault="true"
                implementationClass="com.github.blarc.gitlab.template.lint.plugin.inspections.GitlabLintInspection"
                displayName="Linting"
                shortName="GitlabLint"
                runForWholeFile="true"/>

        <editorNotificationProvider
                implementation="com.github.blarc.gitlab.template.lint.plugin.providers.LintNotificationProvider"
                id="GitlabLint.LintNotificationProvider"/>
        />

        <postStartupActivity
                implementation="com.github.blarc.gitlab.template.lint.plugin.listeners.ApplicationStartupListener"/>

        <notificationGroup
                id="gitlab.lint.notification.general"
                displayType="BALLOON"
                key="notification.group.general.name"
        />
        <notificationGroup
                id="gitlab.lint.notification.important"
                displayType="STICKY_BALLOON"
                key="notification.group.important.name"
        />


        <statusBarWidgetFactory
                id="lintStatusWidget"
                implementation="com.github.blarc.gitlab.template.lint.plugin.widget.LintStatusWidgetFactory"
                order="first"
        />

        <fileEditorProvider
                id="gitlabLintEditorProvider"
                implementation="com.github.blarc.gitlab.template.lint.plugin.providers.GitlabLintEditorProvider"
                order="first"
        />

    </extensions>

    <actions>
        <action
                id="com.github.blarc.gitlab.template.lint.plugin.widget.actions.RefreshAction"
                class="com.github.blarc.gitlab.template.lint.plugin.widget.actions.RefreshAction"
                text="RefreshAction"
        />
    </actions>
</idea-plugin>
